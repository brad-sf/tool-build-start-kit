{"version":3,"sources":["vendor/_normalize.scss","partials/config/_fonts.scss","partials/config/_grid.scss","vendor/susy/language/susy/_container.scss","vendor/susy/output/support/_rem.scss","vendor/susy/output/shared/_container.scss","vendor/susy/output/support/_clearfix.scss","partials/_general.scss","partials/layouts/_global.scss","partials/config/_mixins.scss","partials/layouts/_master.scss","partials/config/_variables.scss","vendor/susy/language/susy/_span.scss","vendor/susy/output/float/_span.scss","partials/_components.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["/*! normalize.css v3.0.2 | MIT License | git.io/normalize */\n\n/**\n * 1. Set default font family to sans-serif.\n * 2. Prevent iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */\n\nhtml {\n  font-family: sans-serif; /* 1 */\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Remove default margin.\n */\n\nbody {\n  margin: 0;\n}\n\n/* HTML5 display definitions\n   ========================================================================== */\n\n/**\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\n * and Firefox.\n * Correct `block` display not defined for `main` in IE 11.\n */\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n/**\n * 1. Correct `inline-block` display not defined in IE 8/9.\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n */\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address `[hidden]` styling not present in IE 8/9/10.\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\n */\n\n[hidden],\ntemplate {\n  display: none;\n}\n\n/* Links\n   ========================================================================== */\n\n/**\n * Remove the gray background color from active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * Improve readability when focused and also mouse hovered in all browsers.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n */\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\n/**\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n */\n\nb,\nstrong {\n  font-weight: bold;\n}\n\n/**\n * Address styling not present in Safari and Chrome.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Address variable `h1` font-size and margin within `section` and `article`\n * contexts in Firefox 4+, Safari, and Chrome.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/**\n * Address styling not present in IE 8/9.\n */\n\nmark {\n  background: #ff0;\n  color: #000;\n}\n\n/**\n * Address inconsistent and variable font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove border when inside `a` element in IE 8/9/10.\n */\n\nimg {\n  border: 0;\n}\n\n/**\n * Correct overflow not hidden in IE 9/10/11.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Address margin not present in IE 8/9 and Safari.\n */\n\nfigure {\n  margin: 1em 40px;\n}\n\n/**\n * Address differences between Firefox and other browsers.\n */\n\nhr {\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n  height: 0;\n}\n\n/**\n * Contain overflow in all browsers.\n */\n\npre {\n  overflow: auto;\n}\n\n/**\n * Address odd `em`-unit font size rendering in all browsers.\n */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\n * styling of `select`, unless a `border` property is set.\n */\n\n/**\n * 1. Correct color not being inherited.\n *    Known issue: affects color of disabled elements.\n * 2. Correct font properties not being inherited.\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit; /* 1 */\n  font: inherit; /* 2 */\n  margin: 0; /* 3 */\n}\n\n/**\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\n */\n\nbutton {\n  overflow: visible;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n * Correct `select` style inheritance in Firefox.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * Remove inner padding and border in Firefox 4+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\ninput {\n  line-height: normal;\n}\n\n/**\n * It's recommended that you don't attempt to style these elements.\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\n *\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\n * 2. Remove excess padding in IE 8/9/10.\n */\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\n * `font-size` values of the `input`, it causes the cursor style of the\n * decrement button to change from `default` to `text`.\n */\n\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\n *    (include `-moz` to future-proof).\n */\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box; /* 2 */\n  box-sizing: content-box;\n}\n\n/**\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\n * Safari (but not Chrome) clips the cancel button when the search input has\n * padding (and `textfield` appearance).\n */\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Remove default vertical scrollbar in IE 8/9/10/11.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * Don't inherit the `font-weight` (applied by a rule above).\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n */\n\noptgroup {\n  font-weight: bold;\n}\n\n/* Tables\n   ========================================================================== */\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ntd,\nth {\n  padding: 0;\n}\n","/**\n * FONT IMPORTS\n */\n// Go here...\n\n\n\n\n/**\n * FONT SETTINGS\n */\n$base-font-size: 16px;\nbody {\n  font-size: $base-font-size;\n}\n\n\n\n\n\n/**\n * FONT VARIABLES\n */\n$font__heading: sans-serif;\n$font__subheading: sans-serif;\n$font__body: Helvetica, sans-serif;\n$font__script: sans-serif;\n\n\n\n\n\n\n/**\n * FONT MIXINS\n */\n \n// EM CONVERTOR\n@function em($px, $base: $base-font-size) {\n    @return ($px / $base) * 1em;\n}\n\n// HEADING FONT\n@mixin headingFont {\n  font-family: $font__heading;\n  letter-spacing: 1px;\n}\n\n\n","/**\n * GRID BREAKPOINTS\n */\n$gridTiny: 480px;\n$gridSmall: 768px;\n$gridMedium: 992px;\n$gridLarge: 1200px;\n$gridExtraLarge: 1400px;\n\n// Standard nest padding\n$gridOuterContainerPadding: 15px;\n\n\n\n/**\n * GRID BREAKPOINT CONTROLLER MIXIN\n * Mobile First.\n */\n@mixin breakpoint($class) {\n  \n  // Tiny: tn\n  @if $class == tn {\n    @media (max-width: $gridTiny) { @content; }\n  }\n  \n  // Extra Small: xs\n  @else if $class == xs {\n    @media (max-width: $gridSmall - 1px) { @content; }\n  }\n  \n  // Small: sm\n  @else if $class == sm {\n    @media (min-width: $gridSmall) { @content; }\n  }\n  \n  // Medium: md\n  @else if $class == md {\n    @media (min-width: $gridMedium) { @content; }\n  }\n  \n  // Large: lg\n  @else if $class == lg {\n    @media (min-width: $gridLarge) { @content; }\n  }\n  \n  // Extra Large: xl\n  @else if $class == xl {\n    @media (min-width: $gridExtraLarge) { @content; }\n  }\n  \n  @else {\n    @warn \"Breakpoint mixin supports: tn, xs, sm, md, lg, xl\";\n  }\n}\n\n\n/**\n * MOBILE LAST DESKTOP OUT BREAKPOINTS\n * For use in unique circumstances requiring degraded\n * styles in a 'desktop' first style.\n */\n@mixin breakpoint_out($class) {\n  \n  // Tiny: tn\n  @if $class == tn {\n    @media (max-width: $gridTiny) { @content; }\n  }\n  \n  // Extra Small: xs\n  @else if $class == xs {\n    @media (max-width: $gridSmall - 1px) { @content; }\n  }\n  \n  // Small: sm\n  @else if $class == sm {\n    @media (max-width: $gridMedium) { @content; }\n  }\n  \n  // Medium: md\n  @else if $class == md {\n    @media (max-width: $gridLarge) { @content; }\n  }\n  \n  // Large: lg\n  @else if $class == lg {\n    @media (max-width: $gridExtraLarge) { @content; }\n  }\n  \n  // Extra Large: xl\n  @else if $class == xl {\n    @content;\n  }\n  \n  @else {\n    @warn \"Breakpoint mixin supports: tn, xs, sm, md, lg, xl\";\n  }\n}\n\n\n\n\n\n\n/**\n * OUTER-CONTAINER\n * Constrains content to breakpoints.\n */\n.outer-container {\n  @include container;\n  // @include breakpoint(sm) {max-width: $gridSmall;}\n  @include breakpoint(md) {max-width: $gridMedium;}\n  @include breakpoint(lg) {max-width: $gridLarge;}\n  @include breakpoint(xl) {max-width: $gridExtraLarge;}\n  \n  padding: 0 $gridOuterContainerPadding;\n  \n  @include susy-clearfix();\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Shared Container API\n// ====================\n\n// Container Output\n// ----------------\n// - [$width]         : <length>\n// - [$justify]       : left | center | right\n// - [$math]          : fluid | static\n@mixin container-output(\n  $width,\n  $justify: auto auto,\n  $property: max-width\n) {\n  $output: (\n    #{$property}: $width or 100%,\n    margin-left: nth($justify, 1),\n    margin-right: nth($justify, 2),\n  );\n\n  @include output($output);\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","/**\n * GENERAL & HELPERS ETC.\n */\n.clear {\n  clear: both;\n  height: 0;\n}\n\n\n\n\n\n/**\n * OVERRIDES\n */\nfieldset {\n  padding: 0;\n  border: 0;\n  margin: 0;\n}\n","/**\n * GLOBAL STYLES ACCROSS ALL LAYOUTS AND TEMPLATES\n * General styles only.\n */\n\n// Border Box Them All :)\n* { \n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n\n\n/**\n * IMAGES\n */\nimg {\n   max-width: 100%;\n   height: auto;\n   vertical-align: middle;\n}\n\n\n\n\n\n/**\n * HEADINGS\n */\nh1, h2, h3, h4 {\n  // text-transform: uppercase;\n}\n\n\n\n\n\n/**\n * LISTS ul/li\n */\n ul {\n  @include unlist();\n }\n\n\n\n\n\n\n\n/**\n * BROWSERUPGRADE\n */\n.browserupgrade {\n  text-align: center;\n  padding: 50px;\n}\n","/**\n * NEST\n * (like .row from TWBS)\n */\n@mixin nest() {\n  @include susy-clearfix;\n}\n\n\n\n\n\n/**\n * UNCOLUMN\n */\n@mixin uncolumn() {\n  width: auto;\n  float: none;\n  padding-left: inherit;\n  padding-right: inherit;\n}\n\n\n\n\n\n/**\n * UNLIST\n */\n@mixin unlist {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n\n\n\n\n\n/**\n * REMOVE FIRST AND LAST MARGINS\n */\n@mixin noFirstLastMargin() {\n  // Remove top and bottom margins from first and last children\n  // direct descendants for nice alignment with wrappers and containers.\n  > :first-child {margin-top: 0;}\n  > :last-child {margin-bottom: 0;}\n}\n","/**\n * MASTER LAYOUT\n * Layouts style the over-all theme of the site and\n * the header and footer. Template specific layouts such\n * as home page or content page are styled as individual\n * templates in the templates folder.\n */\nbody {\n  min-width: 320px;\n  min-height: 100%;\n  background: $color__core-background;\n}\n\n\n\n\n\n/**\n * LAYOUT SPECIFIC VARIABLES\n */\n$header-height: 70px;\n\n\n\n\n\n\n/**\n * HEADER\n */\n.header {\n  background: $color__brand--primary;\n  height: $header-height;\n}\n\n\n\n\n\n.header__logo {\n  float: left;\n  margin: 0;\n  line-height: $header-height;\n  font-weight: normal;\n  font-size: em(32px);\n  \n  a {\n    color: $color__white;\n  }\n}\n\n\n\n\n\n\n\n\n/**\n * CONTENT-MAIN\n */\n.content-main {}\n\n\n\n\n\n\n\n\n\n/**\n * FOOTER\n */\n.footer {\n  background: $color__brand--primary;\n  margin-top: 30px;\n  padding: 20px 0;\n}\n\n\n\n\n\n/**\n * SECTIONS AND ASIDE\n */\n.section {}\n\n.section--has-aside {\n  \n  @include breakpoint(sm) {\n    @include span(8);\n  }\n}\n\n.aside {\n  \n  @include breakpoint(sm) {\n    @include span(4 last);\n    border-left: 1px solid $color__brand--alt;\n  }\n}\n","/**\n * VARIABLES\n */\n\n\n\n\n\n/**\n * COLORS ********\n */\n\n// Global\n$color__core-background: white;\n\n// Basics\n$color__white: #fff;\n\n// Brand\n$color__brand--primary: #1bafa9;\n$color__brand--alt: #fc903c;\n\n\n\n\n\n\n\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n","/**\n * COMPONENTS (BLOCKS)\n * All components should be individually classed and styled here.\n */\n\n\n\n\n\n\n/**\n * The .table table :)\n */\n.table {}\n\n\n\n\n\n\n/**\n * BUTTON\n */\n.button {\n  display: inline-block;\n  text-align: center;\n  padding: 5px 8px;\n}\n\n\n\n\n\n"],"sourceRoot":"/source/"}